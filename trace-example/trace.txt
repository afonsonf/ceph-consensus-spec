 <Initial predicate>
	/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ phase = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ epoch = 1
	/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ messages = <<>>
	/\ step_x = "init"
	/\ accepted_pn = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ isLeader = (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
	/\ step = 0
	/\ message_history = {}
	/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ acked_lease = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ num_last = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 0

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ phase = (m1 :> PHASE_ELECTION @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
	/\ epoch = 2
	/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ messages = <<>>
	/\ step_x = "election"
	/\ accepted_pn = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ isLeader = (m1 :> FALSE @@ m2 :> TRUE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_RECOVERING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
	/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
	/\ step = 1
	/\ message_history = {}
	/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ acked_lease = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ num_last = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 0

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ phase = (m1 :> PHASE_ELECTION @@ m2 :> PHASE_PRE_COLLECT @@ m3 :> PHASE_ELECTION)
	/\ epoch = 2
	/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ messages = <<>>
	/\ step_x = "election_recover"
	/\ accepted_pn = (m1 :> 0 @@ m2 :> 102 @@ m3 :> 0)
	/\ isLeader = (m1 :> FALSE @@ m2 :> TRUE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_RECOVERING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
	/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
	/\ step = 2
	/\ message_history = {}
	/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ acked_lease = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ num_last = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 0

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ phase = (m1 :> PHASE_ELECTION @@ m2 :> PHASE_COLLECT @@ m3 :> PHASE_ELECTION)
	/\ epoch = 2
	/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ messages = <<[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102]>>
	/\ step_x = "pre_send_collect"
	/\ accepted_pn = (m1 :> 0 @@ m2 :> 102 @@ m3 :> 0)
	/\ isLeader = (m1 :> FALSE @@ m2 :> TRUE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_RECOVERING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
	/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
	/\ step = 3
	/\ message_history = {[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102]}
	/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ acked_lease = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ num_last = (m1 :> 0 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 0

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ phase = (m1 :> PHASE_ELECTION @@ m2 :> PHASE_COLLECT @@ m3 :> PHASE_ELECTION)
	/\ epoch = 2
	/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ messages = <<[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]>>
	/\ step_x = "receive collect"
	/\ accepted_pn = (m1 :> 0 @@ m2 :> 102 @@ m3 :> 102)
	/\ isLeader = (m1 :> FALSE @@ m2 :> TRUE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_RECOVERING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
	/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
	/\ step = 4
	/\ message_history = {[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ acked_lease = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ num_last = (m1 :> 0 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 0

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ phase = (m1 :> PHASE_ELECTION @@ m2 :> PHASE_COLLECT @@ m3 :> PHASE_ELECTION)
	/\ epoch = 2
	/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ messages = <<[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102]>>
	/\ step_x = "restart mon"
	/\ accepted_pn = (m1 :> 0 @@ m2 :> 102 @@ m3 :> 102)
	/\ isLeader = (m1 :> FALSE @@ m2 :> TRUE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_RECOVERING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
	/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
	/\ step = 5
	/\ message_history = {[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ acked_lease = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ num_last = (m1 :> 0 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 1

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ phase = (m1 :> PHASE_ELECTION @@ m2 :> PHASE_COLLECT @@ m3 :> PHASE_ELECTION)
	/\ epoch = 3
	/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ messages = <<>>
	/\ step_x = "timeout and restart"
	/\ accepted_pn = (m1 :> 0 @@ m2 :> 102 @@ m3 :> 102)
	/\ isLeader = (m1 :> FALSE @@ m2 :> TRUE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_RECOVERING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
	/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
	/\ step = 6
	/\ message_history = {[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ acked_lease = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ num_last = (m1 :> 0 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 1

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ phase = (m1 :> PHASE_ELECTION @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
	/\ epoch = 4
	/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ messages = <<>>
	/\ step_x = "election"
	/\ accepted_pn = (m1 :> 0 @@ m2 :> 102 @@ m3 :> 102)
	/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_RECOVERING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
	/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
	/\ step = 7
	/\ message_history = {[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ acked_lease = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ num_last = (m1 :> 0 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 1

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ phase = (m1 :> PHASE_PRE_COLLECT @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
	/\ epoch = 4
	/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ messages = <<>>
	/\ step_x = "election_recover"
	/\ accepted_pn = (m1 :> 101 @@ m2 :> 102 @@ m3 :> 102)
	/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_RECOVERING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
	/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
	/\ step = 8
	/\ message_history = {[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ acked_lease = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ num_last = (m1 :> 0 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 1

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ phase = (m1 :> PHASE_COLLECT @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
	/\ epoch = 4
	/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ messages = <<[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101]>>
	/\ step_x = "pre_send_collect"
	/\ accepted_pn = (m1 :> 101 @@ m2 :> 102 @@ m3 :> 102)
	/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_RECOVERING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
	/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
	/\ step = 9
	/\ message_history = {[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ acked_lease = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ num_last = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 1

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ phase = (m1 :> PHASE_COLLECT @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
	/\ epoch = 4
	/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ messages = <<[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102]>>
	/\ step_x = "receive collect"
	/\ accepted_pn = (m1 :> 101 @@ m2 :> 102 @@ m3 :> 102)
	/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_RECOVERING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
	/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
	/\ step = 10
	/\ message_history = {[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ acked_lease = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ num_last = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 1

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ phase = (m1 :> PHASE_COLLECT @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
	/\ epoch = 4
	/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102]>>
	/\ step_x = "receive collect"
	/\ accepted_pn = (m1 :> 101 @@ m2 :> 102 @@ m3 :> 102)
	/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_RECOVERING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
	/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
	/\ step = 11
	/\ message_history = {[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ acked_lease = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ num_last = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 1

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ phase = (m1 :> PHASE_PRE_COLLECT @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
	/\ epoch = 4
	/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102]>>
	/\ step_x = "receive last"
	/\ accepted_pn = (m1 :> 201 @@ m2 :> 102 @@ m3 :> 102)
	/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_RECOVERING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
	/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> 0 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
	/\ step = 12
	/\ message_history = {[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ acked_lease = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> 0 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ num_last = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 1

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ phase = (m1 :> PHASE_COLLECT @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
	/\ epoch = 4
	/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201]>>
	/\ step_x = "pre_send_collect"
	/\ accepted_pn = (m1 :> 201 @@ m2 :> 102 @@ m3 :> 102)
	/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_RECOVERING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
	/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
	/\ step = 13
	/\ message_history = {[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ acked_lease = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ num_last = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 1

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ phase = (m1 :> PHASE_COLLECT @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
	/\ epoch = 4
	/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201]>>
	/\ step_x = "receive collect"
	/\ accepted_pn = (m1 :> 201 @@ m2 :> 102 @@ m3 :> 201)
	/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_RECOVERING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
	/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
	/\ step = 14
	/\ message_history = {[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ acked_lease = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ num_last = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 1

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ phase = (m1 :> PHASE_COLLECT @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
	/\ epoch = 4
	/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201]>>
	/\ step_x = "receive collect"
	/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
	/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_RECOVERING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
	/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
	/\ step = 15
	/\ message_history = {[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ acked_lease = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ num_last = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 1

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ phase = (m1 :> PHASE_COLLECT @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
	/\ epoch = 4
	/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201]>>
	/\ step_x = "receive last"
	/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
	/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_RECOVERING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
	/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
	/\ step = 16
	/\ message_history = {[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ acked_lease = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ num_last = (m1 :> 2 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 1

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ phase = (m1 :> PHASE_COLLECT @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
	/\ epoch = 4
	/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102]>>
	/\ step_x = "receive last"
	/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
	/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_RECOVERING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
	/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> 0 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
	/\ step = 17
	/\ message_history = {[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ acked_lease = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> 0 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 1

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ phase = (m1 :> PHASE_LEASE @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
	/\ epoch = 4
	/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3]>>
	/\ step_x = "post_last"
	/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
	/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_ACTIVE @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
	/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
	/\ step = 18
	/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 1

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ phase = (m1 :> PHASE_LEASE @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
	/\ epoch = 4
	/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3]>>
	/\ step_x = "client_request"
	/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
	/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_ACTIVE @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
	/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
	/\ step = 19
	/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 1

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 1 @@ m2 :> 0 @@ m3 :> 0)
	/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
	/\ epoch = 4
	/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201]>>
	/\ step_x = "propose_pending"
	/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
	/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
	/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> <<v1>> @@ m2 :> << >> @@ m3 :> << >>)
	/\ step = 20
	/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
	/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 1

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 1 @@ m2 :> 0 @@ m3 :> 0)
	/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
	/\ epoch = 4
	/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201]>>
	/\ step_x = "receive lease"
	/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
	/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_ACTIVE @@ m3 :> STATE_RECOVERING)
	/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> <<v1>> @@ m2 :> << >> @@ m3 :> << >>)
	/\ step = 21
	/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
	/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 1

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 1 @@ m2 :> 0 @@ m3 :> 0)
	/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
	/\ epoch = 4
	/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201]>>
	/\ step_x = "receive lease"
	/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
	/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_ACTIVE @@ m3 :> STATE_ACTIVE)
	/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> <<v1>> @@ m2 :> << >> @@ m3 :> << >>)
	/\ step = 22
	/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
	/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 1

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 0)
	/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
	/\ epoch = 4
	/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201]>>
	/\ step_x = "receive begin"
	/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
	/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_UPDATING @@ m3 :> STATE_ACTIVE)
	/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> <<v1>> @@ m2 :> <<v1>> @@ m3 :> << >>)
	/\ step = 23
	/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> v1 @@ m2 :> v1 @@ m3 :> Nil)
	/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 1

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
	/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
	/\ epoch = 4
	/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201]>>
	/\ step_x = "receive begin"
	/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
	/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_UPDATING @@ m3 :> STATE_UPDATING)
	/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> <<v1>> @@ m2 :> <<v1>> @@ m3 :> <<v1>>)
	/\ step = 24
	/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
	/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 1

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
	/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
	/\ epoch = 4
	/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201]>>
	/\ step_x = "receive accept"
	/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
	/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> TRUE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_UPDATING @@ m3 :> STATE_UPDATING)
	/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> <<v1>> @@ m2 :> <<v1>> @@ m3 :> <<v1>>)
	/\ step = 25
	/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
	/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 1

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
	/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
	/\ epoch = 4
	/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102]>>
	/\ step_x = "receive accept"
	/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
	/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> TRUE @@ m3 :> TRUE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_UPDATING @@ m3 :> STATE_UPDATING)
	/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> <<v1>> @@ m2 :> <<v1>> @@ m3 :> <<v1>>)
	/\ step = 26
	/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
	/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
	/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 1

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
	/\ phase = (m1 :> PHASE_COMMIT @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
	/\ epoch = 4
	/\ monitor_store = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
	/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201]>>
	/\ step_x = "post_accept"
	/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
	/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> TRUE @@ m3 :> TRUE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_REFRESH @@ m2 :> STATE_UPDATING @@ m3 :> STATE_UPDATING)
	/\ first_committed = (m1 :> 1 @@ m2 :> 0 @@ m3 :> 0)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> <<v1>> @@ m2 :> <<v1>> @@ m3 :> <<v1>>)
	/\ step = 27
	/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 1 @@ m2 :> 0 @@ m3 :> 0)
	/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
	/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 1

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
	/\ phase = (m1 :> PHASE_LEASE @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
	/\ epoch = 4
	/\ monitor_store = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
	/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3]>>
	/\ step_x = "finish_commit"
	/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
	/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> TRUE @@ m3 :> TRUE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_ACTIVE @@ m2 :> STATE_UPDATING @@ m3 :> STATE_UPDATING)
	/\ first_committed = (m1 :> 1 @@ m2 :> 0 @@ m3 :> 0)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> <<v1>> @@ m2 :> <<v1>> @@ m3 :> <<v1>>)
	/\ step = 28
	/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 1 @@ m2 :> 0 @@ m3 :> 0)
	/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
	/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 1

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
	/\ phase = (m1 :> PHASE_LEASE @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
	/\ epoch = 4
	/\ monitor_store = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
	/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3]>>
	/\ step_x = "client_request"
	/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
	/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> TRUE @@ m3 :> TRUE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_ACTIVE @@ m2 :> STATE_UPDATING @@ m3 :> STATE_UPDATING)
	/\ first_committed = (m1 :> 1 @@ m2 :> 0 @@ m3 :> 0)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> <<v1>> @@ m2 :> <<v1>> @@ m3 :> <<v1>>)
	/\ step = 29
	/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 1 @@ m2 :> 0 @@ m3 :> 0)
	/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
	/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 1

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 2 @@ m2 :> 1 @@ m3 :> 1)
	/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
	/\ epoch = 4
	/\ monitor_store = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
	/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201]>>
	/\ step_x = "propose_pending"
	/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
	/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_UPDATING @@ m3 :> STATE_UPDATING)
	/\ first_committed = (m1 :> 1 @@ m2 :> 0 @@ m3 :> 0)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> <<v1, v1>> @@ m2 :> <<v1>> @@ m3 :> <<v1>>)
	/\ step = 30
	/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 1 @@ m2 :> 0 @@ m3 :> 0)
	/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
	/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 1

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 2 @@ m2 :> 1 @@ m3 :> 1)
	/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
	/\ epoch = 4
	/\ monitor_store = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
	/\ messages = <<[values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201]>>
	/\ step_x = "receive last"
	/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
	/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_UPDATING @@ m3 :> STATE_UPDATING)
	/\ first_committed = (m1 :> 1 @@ m2 :> 0 @@ m3 :> 0)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> <<v1, v1>> @@ m2 :> <<v1>> @@ m3 :> <<v1>>)
	/\ step = 31
	/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 1 @@ m2 :> 0 @@ m3 :> 0)
	/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
	/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 1

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 2 @@ m2 :> 0 @@ m3 :> 1)
	/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
	/\ epoch = 4
	/\ monitor_store = (m1 :> v1 @@ m2 :> v1 @@ m3 :> Nil)
	/\ messages = <<[values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201]>>
	/\ step_x = "receive commit"
	/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
	/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_UPDATING @@ m3 :> STATE_UPDATING)
	/\ first_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 0)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> <<v1, v1>> @@ m2 :> <<v1>> @@ m3 :> <<v1>>)
	/\ step = 32
	/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 0)
	/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> v1)
	/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 1

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 2 @@ m2 :> 0 @@ m3 :> 0)
	/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
	/\ epoch = 4
	/\ monitor_store = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
	/\ messages = <<[last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201]>>
	/\ step_x = "receive commit"
	/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
	/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_UPDATING @@ m3 :> STATE_UPDATING)
	/\ first_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> <<v1, v1>> @@ m2 :> <<v1>> @@ m3 :> <<v1>>)
	/\ step = 33
	/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
	/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
	/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 1

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 2 @@ m2 :> 0 @@ m3 :> 0)
	/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
	/\ epoch = 4
	/\ monitor_store = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
	/\ messages = <<[last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201]>>
	/\ step_x = "receive lease"
	/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
	/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_ACTIVE @@ m3 :> STATE_UPDATING)
	/\ first_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> <<v1, v1>> @@ m2 :> <<v1>> @@ m3 :> <<v1>>)
	/\ step = 34
	/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
	/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
	/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 1

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 2 @@ m2 :> 0 @@ m3 :> 0)
	/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
	/\ epoch = 4
	/\ monitor_store = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
	/\ messages = <<[values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201]>>
	/\ step_x = "receive lease"
	/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
	/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_ACTIVE @@ m3 :> STATE_ACTIVE)
	/\ first_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> <<v1, v1>> @@ m2 :> <<v1>> @@ m3 :> <<v1>>)
	/\ step = 35
	/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
	/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
	/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 1

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 2 @@ m2 :> 2 @@ m3 :> 0)
	/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
	/\ epoch = 4
	/\ monitor_store = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
	/\ messages = <<[values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [last_committed |-> 1, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201]>>
	/\ step_x = "receive begin"
	/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
	/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_UPDATING @@ m3 :> STATE_ACTIVE)
	/\ first_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> <<v1, v1>> @@ m2 :> <<v1, v1>> @@ m3 :> <<v1>>)
	/\ step = 36
	/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [last_committed |-> 1, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
	/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> v1 @@ m2 :> v1 @@ m3 :> Nil)
	/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 1

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 2 @@ m2 :> 2 @@ m3 :> 2)
	/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
	/\ epoch = 4
	/\ monitor_store = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
	/\ messages = <<[values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [last_committed |-> 1, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 1, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201]>>
	/\ step_x = "receive begin"
	/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
	/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_UPDATING @@ m3 :> STATE_UPDATING)
	/\ first_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> <<v1, v1>> @@ m2 :> <<v1, v1>> @@ m3 :> <<v1, v1>>)
	/\ step = 37
	/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [last_committed |-> 1, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 1, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
	/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
	/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 1

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 2 @@ m2 :> 2 @@ m3 :> 2)
	/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
	/\ epoch = 4
	/\ monitor_store = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
	/\ messages = <<[last_committed |-> 1, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 1, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201]>>
	/\ step_x = "receive commit"
	/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
	/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_UPDATING @@ m3 :> STATE_UPDATING)
	/\ first_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> <<v1, v1>> @@ m2 :> <<v1, v1>> @@ m3 :> <<v1, v1>>)
	/\ step = 38
	/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [last_committed |-> 1, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 1, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
	/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
	/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 1

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 2 @@ m2 :> 2 @@ m3 :> 2)
	/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
	/\ epoch = 4
	/\ monitor_store = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
	/\ messages = <<[last_committed |-> 1, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201]>>
	/\ step_x = "receive accept"
	/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
	/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> TRUE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_UPDATING @@ m3 :> STATE_UPDATING)
	/\ first_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> <<v1, v1>> @@ m2 :> <<v1, v1>> @@ m3 :> <<v1, v1>>)
	/\ step = 39
	/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [last_committed |-> 1, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 1, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
	/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
	/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 1

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 2 @@ m2 :> 2 @@ m3 :> 2)
	/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
	/\ epoch = 4
	/\ monitor_store = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
	/\ messages = <<>>
	/\ step_x = "receive accept"
	/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
	/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> TRUE @@ m3 :> TRUE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_UPDATING @@ m3 :> STATE_UPDATING)
	/\ first_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> <<v1, v1>> @@ m2 :> <<v1, v1>> @@ m3 :> <<v1, v1>>)
	/\ step = 40
	/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [last_committed |-> 1, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 1, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
	/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
	/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 1

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 2 @@ m2 :> 2 @@ m3 :> 2)
	/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
	/\ epoch = 4
	/\ monitor_store = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
	/\ messages = <<>>
	/\ step_x = "restart mon"
	/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
	/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> TRUE @@ m3 :> TRUE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_UPDATING)
	/\ first_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> <<v1, v1>> @@ m2 :> <<v1, v1>> @@ m3 :> <<v1, v1>>)
	/\ step = 41
	/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [last_committed |-> 1, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 1, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
	/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
	/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 2

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 2 @@ m2 :> 2 @@ m3 :> 2)
	/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
	/\ epoch = 5
	/\ monitor_store = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
	/\ messages = <<>>
	/\ step_x = "timeout and restart"
	/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
	/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> TRUE @@ m3 :> TRUE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_UPDATING)
	/\ first_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> <<v1, v1>> @@ m2 :> <<v1, v1>> @@ m3 :> <<v1, v1>>)
	/\ step = 42
	/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [last_committed |-> 1, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 1, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
	/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
	/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 2

 <Next line 939, col 5 to line 987, col 40 of module paxos>
	/\ uncommitted_v = (m1 :> 2 @@ m2 :> 2 @@ m3 :> 2)
	/\ phase = (m1 :> PHASE_ELECTION @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
	/\ epoch = 6
	/\ monitor_store = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
	/\ messages = <<>>
	/\ step_x = "election"
	/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
	/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
	/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> TRUE @@ m3 :> TRUE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ state = (m1 :> STATE_RECOVERING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
	/\ first_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
	/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ values = (m1 :> <<v1, v1>> @@ m2 :> <<v1, v1>> @@ m3 :> <<v1, v1>>)
	/\ step = 43
	/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [last_committed |-> 1, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 1, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
	/\ last_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
	/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
	/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
	/\ uncommitted_value = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
	/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
	/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
	/\ number_refreshes = 2

