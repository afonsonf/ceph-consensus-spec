@!@!@STARTMSG 2262:0 @!@!@
TLC2 Version 2.15 of Day Month 20?? (rev: e4cae85)
@!@!@ENDMSG 2262 @!@!@
@!@!@STARTMSG 2187:0 @!@!@
Running breadth-first search Model-Checking with fp 96 and seed -8139678535415410181 with 4 workers on 4 cores with 2368MB heap and 5322MB offheap memory [pid: 66159] (Linux 5.8.0-44-generic amd64, AdoptOpenJDK 14.0.1 x86_64, OffHeapDiskFPSet, DiskStateQueue).
@!@!@ENDMSG 2187 @!@!@
@!@!@STARTMSG 2220:0 @!@!@
Starting SANY...
@!@!@ENDMSG 2220 @!@!@
Parsing file /home/afonsonf/sandbox/reps/tese-notas/ceph/draft-tla-repo/src/paxos.toolbox/test-model/MC.tla
Parsing file /home/afonsonf/sandbox/reps/tese-notas/ceph/draft-tla-repo/src/paxos.toolbox/test-model/paxos.tla
Parsing file /home/afonsonf/sandbox/tools/tla+/plugins/org.lamport.tlatools_1.0.0.202102241744/tla2sany/StandardModules/TLC.tla
Parsing file /home/afonsonf/sandbox/tools/tla+/plugins/org.lamport.tlatools_1.0.0.202102241744/tla2sany/StandardModules/Integers.tla
Parsing file /home/afonsonf/sandbox/tools/tla+/plugins/org.lamport.tlatools_1.0.0.202102241744/tla2sany/StandardModules/FiniteSets.tla
Parsing file /home/afonsonf/sandbox/tools/tla+/plugins/org.lamport.tlatools_1.0.0.202102241744/tla2sany/StandardModules/Sequences.tla
Parsing file /tmp/SequencesExt.tla (jar:file:/home/afonsonf/sandbox/tools/tla+/CommunityModules-deps.jar!/SequencesExt.tla)
Parsing file /tmp/FiniteSetsExt.tla (jar:file:/home/afonsonf/sandbox/tools/tla+/CommunityModules-deps.jar!/FiniteSetsExt.tla)
Parsing file /home/afonsonf/sandbox/tools/tla+/plugins/org.lamport.tlatools_1.0.0.202102241744/tla2sany/StandardModules/Naturals.tla
Parsing file /tmp/Functions.tla (jar:file:/home/afonsonf/sandbox/tools/tla+/CommunityModules-deps.jar!/Functions.tla)
Semantic processing of module Naturals
Semantic processing of module Integers
Semantic processing of module Sequences
Semantic processing of module FiniteSets
Semantic processing of module TLC
Semantic processing of module Functions
Semantic processing of module FiniteSetsExt
Semantic processing of module SequencesExt
Semantic processing of module paxos
Semantic processing of module MC
@!@!@STARTMSG 2219:0 @!@!@
SANY finished.
@!@!@ENDMSG 2219 @!@!@
@!@!@STARTMSG 2185:0 @!@!@
Starting... (2021-03-09 16:00:15)
@!@!@ENDMSG 2185 @!@!@
@!@!@STARTMSG 2189:0 @!@!@
Computing initial states...
@!@!@ENDMSG 2189 @!@!@
@!@!@STARTMSG 2190:0 @!@!@
Finished computing initial states: 1 distinct state generated at 2021-03-09 16:00:16.
@!@!@ENDMSG 2190 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(22) at 2021-03-09 16:00:19: 130 784 states generated (130 784 s/min), 68 937 distinct states found (68 937 ds/min), 19 131 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(35) at 2021-03-09 16:01:20: 8 299 029 states generated (8 168 245 s/min), 2 149 613 distinct states found (2 080 676 ds/min), 424 727 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(38) at 2021-03-09 16:02:20: 16 834 794 states generated (8 535 765 s/min), 3 756 426 distinct states found (1 606 813 ds/min), 404 851 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 2110:1 @!@!@
Invariant inv_161530561528423000 is violated.
@!@!@ENDMSG 2110 @!@!@
@!@!@STARTMSG 2121:1 @!@!@
The behavior up to this point is:
@!@!@ENDMSG 2121 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
1: <Initial predicate>
/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ phase = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ epoch = 1
/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ messages = <<>>
/\ step_x = "init"
/\ accepted_pn = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ isLeader = (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
/\ step = 0
/\ message_history = {}
/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ acked_lease = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ num_last = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 0

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
2: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ phase = (m1 :> PHASE_ELECTION @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
/\ epoch = 2
/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ messages = <<>>
/\ step_x = "election"
/\ accepted_pn = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ isLeader = (m1 :> FALSE @@ m2 :> TRUE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_RECOVERING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
/\ step = 1
/\ message_history = {}
/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ acked_lease = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ num_last = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 0

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
3: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ phase = (m1 :> PHASE_ELECTION @@ m2 :> PHASE_PRE_COLLECT @@ m3 :> PHASE_ELECTION)
/\ epoch = 2
/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ messages = <<>>
/\ step_x = "election_recover"
/\ accepted_pn = (m1 :> 0 @@ m2 :> 102 @@ m3 :> 0)
/\ isLeader = (m1 :> FALSE @@ m2 :> TRUE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_RECOVERING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
/\ step = 2
/\ message_history = {}
/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ acked_lease = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ num_last = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 0

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
4: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ phase = (m1 :> PHASE_ELECTION @@ m2 :> PHASE_COLLECT @@ m3 :> PHASE_ELECTION)
/\ epoch = 2
/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ messages = <<[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102]>>
/\ step_x = "pre_send_collect"
/\ accepted_pn = (m1 :> 0 @@ m2 :> 102 @@ m3 :> 0)
/\ isLeader = (m1 :> FALSE @@ m2 :> TRUE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_RECOVERING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
/\ step = 3
/\ message_history = {[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102]}
/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ acked_lease = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ num_last = (m1 :> 0 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 0

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
5: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ phase = (m1 :> PHASE_ELECTION @@ m2 :> PHASE_COLLECT @@ m3 :> PHASE_ELECTION)
/\ epoch = 2
/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ messages = <<[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]>>
/\ step_x = "receive collect"
/\ accepted_pn = (m1 :> 0 @@ m2 :> 102 @@ m3 :> 102)
/\ isLeader = (m1 :> FALSE @@ m2 :> TRUE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_RECOVERING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
/\ step = 4
/\ message_history = {[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ acked_lease = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ num_last = (m1 :> 0 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 0

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
6: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ phase = (m1 :> PHASE_ELECTION @@ m2 :> PHASE_COLLECT @@ m3 :> PHASE_ELECTION)
/\ epoch = 2
/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ messages = <<[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102]>>
/\ step_x = "restart mon"
/\ accepted_pn = (m1 :> 0 @@ m2 :> 102 @@ m3 :> 102)
/\ isLeader = (m1 :> FALSE @@ m2 :> TRUE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_RECOVERING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
/\ step = 5
/\ message_history = {[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ acked_lease = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ num_last = (m1 :> 0 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 1

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
7: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ phase = (m1 :> PHASE_ELECTION @@ m2 :> PHASE_COLLECT @@ m3 :> PHASE_ELECTION)
/\ epoch = 3
/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ messages = <<>>
/\ step_x = "timeout and restart"
/\ accepted_pn = (m1 :> 0 @@ m2 :> 102 @@ m3 :> 102)
/\ isLeader = (m1 :> FALSE @@ m2 :> TRUE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_RECOVERING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
/\ step = 6
/\ message_history = {[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ acked_lease = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ num_last = (m1 :> 0 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 1

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
8: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ phase = (m1 :> PHASE_ELECTION @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
/\ epoch = 4
/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ messages = <<>>
/\ step_x = "election"
/\ accepted_pn = (m1 :> 0 @@ m2 :> 102 @@ m3 :> 102)
/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_RECOVERING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
/\ step = 7
/\ message_history = {[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ acked_lease = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ num_last = (m1 :> 0 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 1

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
9: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ phase = (m1 :> PHASE_PRE_COLLECT @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
/\ epoch = 4
/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ messages = <<>>
/\ step_x = "election_recover"
/\ accepted_pn = (m1 :> 101 @@ m2 :> 102 @@ m3 :> 102)
/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_RECOVERING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
/\ step = 8
/\ message_history = {[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ acked_lease = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ num_last = (m1 :> 0 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 1

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
10: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ phase = (m1 :> PHASE_COLLECT @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
/\ epoch = 4
/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ messages = <<[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101]>>
/\ step_x = "pre_send_collect"
/\ accepted_pn = (m1 :> 101 @@ m2 :> 102 @@ m3 :> 102)
/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_RECOVERING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
/\ step = 9
/\ message_history = {[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ acked_lease = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ num_last = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 1

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
11: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ phase = (m1 :> PHASE_COLLECT @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
/\ epoch = 4
/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ messages = <<[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102]>>
/\ step_x = "receive collect"
/\ accepted_pn = (m1 :> 101 @@ m2 :> 102 @@ m3 :> 102)
/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_RECOVERING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
/\ step = 10
/\ message_history = {[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ acked_lease = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ num_last = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 1

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
12: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ phase = (m1 :> PHASE_COLLECT @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
/\ epoch = 4
/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102]>>
/\ step_x = "receive collect"
/\ accepted_pn = (m1 :> 101 @@ m2 :> 102 @@ m3 :> 102)
/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_RECOVERING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
/\ step = 11
/\ message_history = {[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ acked_lease = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ num_last = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 1

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
13: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ phase = (m1 :> PHASE_PRE_COLLECT @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
/\ epoch = 4
/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102]>>
/\ step_x = "receive last"
/\ accepted_pn = (m1 :> 201 @@ m2 :> 102 @@ m3 :> 102)
/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_RECOVERING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> 0 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
/\ step = 12
/\ message_history = {[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ acked_lease = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> 0 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ num_last = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 1

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
14: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ phase = (m1 :> PHASE_COLLECT @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
/\ epoch = 4
/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201]>>
/\ step_x = "pre_send_collect"
/\ accepted_pn = (m1 :> 201 @@ m2 :> 102 @@ m3 :> 102)
/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_RECOVERING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
/\ step = 13
/\ message_history = {[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ acked_lease = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ num_last = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 1

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
15: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ phase = (m1 :> PHASE_COLLECT @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
/\ epoch = 4
/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201]>>
/\ step_x = "receive collect"
/\ accepted_pn = (m1 :> 201 @@ m2 :> 102 @@ m3 :> 201)
/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_RECOVERING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
/\ step = 14
/\ message_history = {[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ acked_lease = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ num_last = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 1

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
16: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ phase = (m1 :> PHASE_COLLECT @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
/\ epoch = 4
/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201]>>
/\ step_x = "receive collect"
/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_RECOVERING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
/\ step = 15
/\ message_history = {[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ acked_lease = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ num_last = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 1

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
17: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ phase = (m1 :> PHASE_COLLECT @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
/\ epoch = 4
/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201]>>
/\ step_x = "receive last"
/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_RECOVERING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
/\ step = 16
/\ message_history = {[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ acked_lease = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ num_last = (m1 :> 2 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 1

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
18: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ phase = (m1 :> PHASE_COLLECT @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
/\ epoch = 4
/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102]>>
/\ step_x = "receive last"
/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_RECOVERING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> 0 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
/\ step = 17
/\ message_history = {[first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ acked_lease = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> 0 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 1

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
19: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ phase = (m1 :> PHASE_LEASE @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
/\ epoch = 4
/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3]>>
/\ step_x = "post_last"
/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_ACTIVE @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
/\ step = 18
/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 1

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
20: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ phase = (m1 :> PHASE_LEASE @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
/\ epoch = 4
/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3]>>
/\ step_x = "client_request"
/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_ACTIVE @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> << >> @@ m2 :> << >> @@ m3 :> << >>)
/\ step = 19
/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 1

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
21: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 1 @@ m2 :> 0 @@ m3 :> 0)
/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
/\ epoch = 4
/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201]>>
/\ step_x = "propose_pending"
/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> <<v1>> @@ m2 :> << >> @@ m3 :> << >>)
/\ step = 20
/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 1

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
22: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 1 @@ m2 :> 0 @@ m3 :> 0)
/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
/\ epoch = 4
/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201]>>
/\ step_x = "receive lease"
/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_ACTIVE @@ m3 :> STATE_RECOVERING)
/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> <<v1>> @@ m2 :> << >> @@ m3 :> << >>)
/\ step = 21
/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 1

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
23: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 1 @@ m2 :> 0 @@ m3 :> 0)
/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
/\ epoch = 4
/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201]>>
/\ step_x = "receive lease"
/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_ACTIVE @@ m3 :> STATE_ACTIVE)
/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> <<v1>> @@ m2 :> << >> @@ m3 :> << >>)
/\ step = 22
/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 1

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
24: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 0)
/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
/\ epoch = 4
/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201]>>
/\ step_x = "receive begin"
/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_UPDATING @@ m3 :> STATE_ACTIVE)
/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> <<v1>> @@ m2 :> <<v1>> @@ m3 :> << >>)
/\ step = 23
/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> v1 @@ m2 :> v1 @@ m3 :> Nil)
/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 1

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
25: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
/\ epoch = 4
/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201]>>
/\ step_x = "receive begin"
/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_UPDATING @@ m3 :> STATE_UPDATING)
/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> <<v1>> @@ m2 :> <<v1>> @@ m3 :> <<v1>>)
/\ step = 24
/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 1

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
26: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
/\ epoch = 4
/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201]>>
/\ step_x = "receive accept"
/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> TRUE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_UPDATING @@ m3 :> STATE_UPDATING)
/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> <<v1>> @@ m2 :> <<v1>> @@ m3 :> <<v1>>)
/\ step = 25
/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 1

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
27: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
/\ epoch = 4
/\ monitor_store = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102]>>
/\ step_x = "receive accept"
/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> TRUE @@ m3 :> TRUE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_UPDATING @@ m3 :> STATE_UPDATING)
/\ first_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> <<v1>> @@ m2 :> <<v1>> @@ m3 :> <<v1>>)
/\ step = 26
/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 0 @@ m2 :> 0 @@ m3 :> 0)
/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 1

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
28: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
/\ phase = (m1 :> PHASE_COMMIT @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
/\ epoch = 4
/\ monitor_store = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201]>>
/\ step_x = "post_accept"
/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> TRUE @@ m3 :> TRUE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_REFRESH @@ m2 :> STATE_UPDATING @@ m3 :> STATE_UPDATING)
/\ first_committed = (m1 :> 1 @@ m2 :> 0 @@ m3 :> 0)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> <<v1>> @@ m2 :> <<v1>> @@ m3 :> <<v1>>)
/\ step = 27
/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 1 @@ m2 :> 0 @@ m3 :> 0)
/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 1

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
29: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
/\ phase = (m1 :> PHASE_LEASE @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
/\ epoch = 4
/\ monitor_store = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3]>>
/\ step_x = "finish_commit"
/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> TRUE @@ m3 :> TRUE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_ACTIVE @@ m2 :> STATE_UPDATING @@ m3 :> STATE_UPDATING)
/\ first_committed = (m1 :> 1 @@ m2 :> 0 @@ m3 :> 0)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> <<v1>> @@ m2 :> <<v1>> @@ m3 :> <<v1>>)
/\ step = 28
/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 1 @@ m2 :> 0 @@ m3 :> 0)
/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 1

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
30: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
/\ phase = (m1 :> PHASE_LEASE @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
/\ epoch = 4
/\ monitor_store = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3]>>
/\ step_x = "client_request"
/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> TRUE @@ m3 :> TRUE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_ACTIVE @@ m2 :> STATE_UPDATING @@ m3 :> STATE_UPDATING)
/\ first_committed = (m1 :> 1 @@ m2 :> 0 @@ m3 :> 0)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> <<v1>> @@ m2 :> <<v1>> @@ m3 :> <<v1>>)
/\ step = 29
/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 1 @@ m2 :> 0 @@ m3 :> 0)
/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 1

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
31: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 2 @@ m2 :> 1 @@ m3 :> 1)
/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
/\ epoch = 4
/\ monitor_store = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
/\ messages = <<[values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201]>>
/\ step_x = "propose_pending"
/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_UPDATING @@ m3 :> STATE_UPDATING)
/\ first_committed = (m1 :> 1 @@ m2 :> 0 @@ m3 :> 0)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> <<v1, v1>> @@ m2 :> <<v1>> @@ m3 :> <<v1>>)
/\ step = 30
/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 1 @@ m2 :> 0 @@ m3 :> 0)
/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 1

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
32: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 2 @@ m2 :> 1 @@ m3 :> 1)
/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
/\ epoch = 4
/\ monitor_store = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
/\ messages = <<[values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201]>>
/\ step_x = "receive last"
/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_UPDATING @@ m3 :> STATE_UPDATING)
/\ first_committed = (m1 :> 1 @@ m2 :> 0 @@ m3 :> 0)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> <<v1, v1>> @@ m2 :> <<v1>> @@ m3 :> <<v1>>)
/\ step = 31
/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 1 @@ m2 :> 0 @@ m3 :> 0)
/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 1

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
33: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 2 @@ m2 :> 0 @@ m3 :> 1)
/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
/\ epoch = 4
/\ monitor_store = (m1 :> v1 @@ m2 :> v1 @@ m3 :> Nil)
/\ messages = <<[values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201]>>
/\ step_x = "receive commit"
/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_UPDATING @@ m3 :> STATE_UPDATING)
/\ first_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 0)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> <<v1, v1>> @@ m2 :> <<v1>> @@ m3 :> <<v1>>)
/\ step = 32
/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 0)
/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> v1)
/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 1

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
34: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 2 @@ m2 :> 0 @@ m3 :> 0)
/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
/\ epoch = 4
/\ monitor_store = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
/\ messages = <<[last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201]>>
/\ step_x = "receive commit"
/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_UPDATING @@ m3 :> STATE_UPDATING)
/\ first_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> <<v1, v1>> @@ m2 :> <<v1>> @@ m3 :> <<v1>>)
/\ step = 33
/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 1

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
35: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 2 @@ m2 :> 0 @@ m3 :> 0)
/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
/\ epoch = 4
/\ monitor_store = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
/\ messages = <<[last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201]>>
/\ step_x = "receive lease"
/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_ACTIVE @@ m3 :> STATE_UPDATING)
/\ first_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> <<v1, v1>> @@ m2 :> <<v1>> @@ m3 :> <<v1>>)
/\ step = 34
/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 1

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
36: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 2 @@ m2 :> 0 @@ m3 :> 0)
/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
/\ epoch = 4
/\ monitor_store = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
/\ messages = <<[values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201]>>
/\ step_x = "receive lease"
/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_ACTIVE @@ m3 :> STATE_ACTIVE)
/\ first_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> <<v1, v1>> @@ m2 :> <<v1>> @@ m3 :> <<v1>>)
/\ step = 35
/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 1

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
37: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 2 @@ m2 :> 2 @@ m3 :> 0)
/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
/\ epoch = 4
/\ monitor_store = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
/\ messages = <<[values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [last_committed |-> 1, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201]>>
/\ step_x = "receive begin"
/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_UPDATING @@ m3 :> STATE_ACTIVE)
/\ first_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> <<v1, v1>> @@ m2 :> <<v1, v1>> @@ m3 :> <<v1>>)
/\ step = 36
/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [last_committed |-> 1, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> v1 @@ m2 :> v1 @@ m3 :> Nil)
/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 1

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
38: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 2 @@ m2 :> 2 @@ m3 :> 2)
/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
/\ epoch = 4
/\ monitor_store = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
/\ messages = <<[values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [last_committed |-> 1, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 1, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201]>>
/\ step_x = "receive begin"
/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_UPDATING @@ m3 :> STATE_UPDATING)
/\ first_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> <<v1, v1>> @@ m2 :> <<v1, v1>> @@ m3 :> <<v1, v1>>)
/\ step = 37
/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [last_committed |-> 1, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 1, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 1

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
39: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 2 @@ m2 :> 2 @@ m3 :> 2)
/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
/\ epoch = 4
/\ monitor_store = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
/\ messages = <<[last_committed |-> 1, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 1, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201]>>
/\ step_x = "receive commit"
/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_UPDATING @@ m3 :> STATE_UPDATING)
/\ first_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> <<v1, v1>> @@ m2 :> <<v1, v1>> @@ m3 :> <<v1, v1>>)
/\ step = 38
/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [last_committed |-> 1, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 1, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 1

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
40: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 2 @@ m2 :> 2 @@ m3 :> 2)
/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
/\ epoch = 4
/\ monitor_store = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
/\ messages = <<[last_committed |-> 1, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201]>>
/\ step_x = "receive accept"
/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> TRUE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_UPDATING @@ m3 :> STATE_UPDATING)
/\ first_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> <<v1, v1>> @@ m2 :> <<v1, v1>> @@ m3 :> <<v1, v1>>)
/\ step = 39
/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [last_committed |-> 1, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 1, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 1

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
41: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 2 @@ m2 :> 2 @@ m3 :> 2)
/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
/\ epoch = 4
/\ monitor_store = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
/\ messages = <<>>
/\ step_x = "receive accept"
/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> TRUE @@ m3 :> TRUE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_UPDATING @@ m3 :> STATE_UPDATING)
/\ first_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> <<v1, v1>> @@ m2 :> <<v1, v1>> @@ m3 :> <<v1, v1>>)
/\ step = 40
/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [last_committed |-> 1, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 1, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 1

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
42: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 2 @@ m2 :> 2 @@ m3 :> 2)
/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
/\ epoch = 4
/\ monitor_store = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
/\ messages = <<>>
/\ step_x = "restart mon"
/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> TRUE @@ m3 :> TRUE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_UPDATING)
/\ first_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> <<v1, v1>> @@ m2 :> <<v1, v1>> @@ m3 :> <<v1, v1>>)
/\ step = 41
/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [last_committed |-> 1, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 1, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 2

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
43: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 2 @@ m2 :> 2 @@ m3 :> 2)
/\ phase = (m1 :> PHASE_BEGIN @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
/\ epoch = 5
/\ monitor_store = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
/\ messages = <<>>
/\ step_x = "timeout and restart"
/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> TRUE @@ m3 :> TRUE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_UPDATING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_UPDATING)
/\ first_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> <<v1, v1>> @@ m2 :> <<v1, v1>> @@ m3 :> <<v1, v1>>)
/\ step = 42
/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [last_committed |-> 1, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 1, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> v1 @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 2

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2217:4 @!@!@
44: <Next line 939, col 5 to line 987, col 40 of module paxos>
/\ uncommitted_v = (m1 :> 2 @@ m2 :> 2 @@ m3 :> 2)
/\ phase = (m1 :> PHASE_ELECTION @@ m2 :> PHASE_ELECTION @@ m3 :> PHASE_ELECTION)
/\ epoch = 6
/\ monitor_store = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
/\ messages = <<>>
/\ step_x = "election"
/\ accepted_pn = (m1 :> 201 @@ m2 :> 201 @@ m3 :> 201)
/\ isLeader = (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE)
/\ accepted = ( m1 :> (m1 :> TRUE @@ m2 :> TRUE @@ m3 :> TRUE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ state = (m1 :> STATE_RECOVERING @@ m2 :> STATE_RECOVERING @@ m3 :> STATE_RECOVERING)
/\ first_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
/\ peer_first_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ pending_proposal = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ values = (m1 :> <<v1, v1>> @@ m2 :> <<v1, v1>> @@ m3 :> <<v1, v1>>)
/\ step = 43
/\ message_history = {[last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 0, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m2], [last_committed |-> 1, type |-> OP_LEASE, from |-> m1, dest |-> m3], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 0, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [last_committed |-> 1, type |-> OP_ACCEPT, from |-> m2, dest |-> m1, pn |-> 201], [last_committed |-> 1, type |-> OP_ACCEPT, from |-> m3, dest |-> m1, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 0, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_COMMIT, from |-> m1, dest |-> m3, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m2, pn |-> 201], [values |-> <<v1, v1>>, last_committed |-> 1, type |-> OP_BEGIN, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m2, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 101], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m1, dest |-> m3, pn |-> 201], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m1, pn |-> 102], [first_committed |-> 0, last_committed |-> 0, type |-> OP_COLLECT, from |-> m2, dest |-> m3, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m2, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 102], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m1, pn |-> 201], [values |-> << >>, first_committed |-> 0, last_committed |-> 0, type |-> OP_LAST, from |-> m3, dest |-> m2, pn |-> 102]}
/\ last_committed = (m1 :> 1 @@ m2 :> 1 @@ m3 :> 1)
/\ acked_lease = ( m1 :> (m1 :> TRUE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m2 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) @@
  m3 :> (m1 :> FALSE @@ m2 :> FALSE @@ m3 :> FALSE) )
/\ peer_last_committed = ( m1 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> 0) @@
  m2 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) @@
  m3 :> (m1 :> -1 @@ m2 :> -1 @@ m3 :> -1) )
/\ uncommitted_value = (m1 :> v1 @@ m2 :> v1 @@ m3 :> v1)
/\ num_last = (m1 :> 3 @@ m2 :> 1 @@ m3 :> 0)
/\ new_value = (m1 :> Nil @@ m2 :> Nil @@ m3 :> Nil)
/\ number_refreshes = 2

@!@!@ENDMSG 2217 @!@!@
@!@!@STARTMSG 2200:0 @!@!@
Progress(44) at 2021-03-09 16:02:45: 20 656 619 states generated (8 259 343 s/min), 4 335 995 distinct states found (1 733 704 ds/min), 1 278 states left on queue.
@!@!@ENDMSG 2200 @!@!@
@!@!@STARTMSG 2199:0 @!@!@
20656619 states generated, 4335995 distinct states found, 1278 states left on queue.
@!@!@ENDMSG 2199 @!@!@
@!@!@STARTMSG 2194:0 @!@!@
The depth of the complete state graph search is 44.
@!@!@ENDMSG 2194 @!@!@
@!@!@STARTMSG 2186:0 @!@!@
Finished in 150064ms at (2021-03-09 16:02:45)
@!@!@ENDMSG 2186 @!@!@
